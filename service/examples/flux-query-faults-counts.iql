import "influxdata/influxdb/schema"

fieldKeys = schema.fieldKeys(bucket: "vtrFeederData")
  |> filter(fn: (r) => r._value =~ /^FaultBits/)
  |> keep(columns: ["_value"])
  |> rename(columns: {_value: "_field"})
  |> map(fn: (r) => ({ _field: r._field, true_transitions: 0 }))

transitions = from(bucket: "vtrFeederData")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r._measurement == "status_data" and r._field =~ /^FaultBits/)
  |> map(fn: (r) => ({ r with _value: if bool(v: r._value) then 1 else 0 }))
  |> sort(columns: ["_time"])
  |> group(columns: ["_field"])
  |> difference(nonNegative: true)
  |> filter(fn: (r) => r._value == 1)
  |> count()
  |> rename(columns: {_value: "true_transitions"})
  |> keep(columns: ["_field", "true_transitions"])

union(tables: [fieldKeys, transitions])
  |> group(columns: ["_field"])
  |> sum(column: "true_transitions")
  |> rename(columns: {true_transitions: "fault_counts"})
