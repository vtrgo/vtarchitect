from(bucket: "vtrFeederData")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) =>
      r._measurement == "status_data" and
      contains(value: r._field, set: [
        "VibrationDataFloats[0].VibrationX",
        "VibrationDataFloats[0].VibrationY",
        "VibrationDataFloats[0].VibrationZ",
        "VibrationDataFloats[0].Temperature",
        "VibrationDataFloats[1].VibrationX",
        "VibrationDataFloats[1].VibrationY",
        "VibrationDataFloats[1].VibrationZ",
        "VibrationDataFloats[1].Temperature"
      ])
  )
  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
  |> map(fn: (r) => ({ _time: r._time, _measurement: r._field, _value: r._value }))
  |> yield(name: "1m_mean")
